apply plugin: 'com.android.library'

apply from: "${rootDir}/gradle/WeChatNativeDepend.gradle"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
//        versionCode 1
//        versionName rootProject.ext.VERSION_NAME



        externalNativeBuild {
            cmake {
                targets = ['xhook', 'semi_dlfcn', 'enhance_dlsym']
                arguments = ["-DEnableLOG=${true ? "ON" : "OFF"}" as String]
            }
            exportHeaders {
                from('src/main/cpp/libxhook') {
                    include '**/*.h'
                }
                from('src/main/cpp/libsemi_dlfcn') {
                    include '**/*.h'
                }
                from('src/main/cpp/libenhance_dlsym') {
                    include '**/*.h'
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':matrix-android-lib')
    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.annotation:annotation:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
}

version = rootProject.ext.VERSION_NAME
group = rootProject.ext.GROUP

if (rootProject.file('gradle/WeChatPublish.gradle').exists()) {
    if("External" == rootProject.ext.PUBLISH_CHANNEL){
        apply from: rootProject.file('gradle/android-publish.gradle')
    }else {
        //uploading to WeChat maven repo
        apply from: rootProject.file('gradle/WeChatPublish.gradle')
        wechatPublish {
        artifactId=POM_ARTIFACT_ID}
    }
}

